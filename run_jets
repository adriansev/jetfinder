#!/bin/bash

help ()
{
echo "Signature of the macro function :"
echo "void EmcalJetCDF ( const char *method="local", const char *plugin_mode="test", const char *analysis_mode="grid" )"
echo
echo "Usage : run_jets <kMethod> <kPluginMode> <kAnalysisMode>"
echo "kMethod : local or plugin "
echo "kPluginMode : test, offline, submit, terminate, full "
echo "kAnalysisMode : local, grid, proof "
echo "For running with memory checking tools prefix all arguments with one of the following:"
echo "memstat : for running the ROOT tool memstat"
echo "massif : for running script under the valgrind tool massif"
echo "valgrind : for running under valgrind with --leak-check=full --suppressions=/software/physics-tools/alice/aliroot-src/etc/valgrind-aliroot.supp"
}

escape_quotes () {
  string=$1
  substring="\""
  replacement="\\\""
  echo ${string//"$substring"/"$replacement"}
}


quote_args () {
  arg=$1

  if [[ $arg == ${arg//[^0-9]/} ]]; then
    echo $arg
  else
    echo "\""$arg"\""
  fi
}

dot_countdown () {
i=0
while (( i < $1 )); do
  echo -ne ". "
  sleep 1
  ((i++))
done
echo
}

if [ "$1" = "help" ]; then
  help ; exit
elif [ "$1" = "memstat" ] ; then
  MEMSTAT=" -memstat "
  shift
elif [ "$1" = "massif" ] ; then
  VALGRIND="valgrind --tool=massif "
  shift
elif [ "$1" = "valgrind" ]; then
  VALGRIND="valgrind --leak-check=full --suppressions=/software/physics-tools/alice/aliroot-src/etc/valgrind-aliroot.supp "
  shift
fi

COMMAND="EmcalJetCDF.C"


# parse arguments and quote them
ARGS_CORE=""

for token in $@ ; do
  token2=$(quote_args ${token})

  if [ -n "$ARGS_CORE" ] ; then
    ARGS_CORE=$ARGS_CORE,$token2
  else
    ARGS_CORE=$token2
  fi
done

ARGS_CORE=`escape_quotes $ARGS_CORE`

ARGS_BEGIN="\("
ARGS_END="\)"

PLUGIN_ARGS=$ARGS_BEGIN$ARGS_CORE$ARGS_END

NOHUP="nohup"
REZ="&"
REDIR=" > >(tee out.log) 2> >(tee err.log >&2)"
ROOT=" aliroot -l -b -q"


exec_begin="$NOHUP $VALGRIND $ROOT $MEMSTAT"

exec_end="$REDIR $REZ"

full_command=$exec_begin" "$COMMAND$PLUGIN_ARGS" "$exec_end

echo "Running command :"
echo $full_command
echo "ctrl-c for stopping the execution .."
dot_countdown 5

eval $full_command


